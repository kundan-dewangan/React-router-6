{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["PageApp","React","lazy","PageAuth","PageError","AuthRoute","children","authUser","location","useLocation","to","state","from","App","loginDetails","localStorage","getItem","useState","user","fallback","className","path","element","replace","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAWMA,EAAUC,IAAMC,MAAK,kBAAM,iCAC3BC,EAAWF,IAAMC,MAAK,kBAAM,iCAC5BE,EAAYH,IAAMC,MAAK,kBAAM,kCAI7BG,EAAY,SAAC,GAA0E,IAAxEC,EAAuE,EAAvEA,SAAUC,EAA6D,EAA7DA,SACzBC,EAAWC,cACf,OAAKF,EAGED,EAFE,cAAC,IAAD,CAAUI,GAAG,QAAQC,MAAO,CAAEC,KAAMJ,MA0ChCK,MArCf,WACE,IAAMC,EAA+C,QAAhCC,aAAaC,QAAQ,QAC1C,EAAeC,mBAASH,IAAgB,GAAjCI,EAAP,oBACA,OACE,qCACE,cAAC,IAAD,IACA,cAAC,WAAD,CAAUC,SAAU,qBAAKC,UAAU,YAAnC,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,QAAQC,QAClB,cAAC,EAAD,CAAWf,SAAUW,EAArB,SACE,cAAClB,EAAD,QAIJ,cAAC,IAAD,CACEqB,KAAK,SACLC,QAAS,cAACnB,EAAD,MAEX,cAAC,IAAD,CACEkB,KAAK,aACLC,QAAS,cAAC,IAAD,CAAUC,SAAO,EAACb,GAAG,aAEhC,cAAC,IAAD,CACEW,KAAK,SACLC,QAAS,cAAClB,EAAD,MAEX,cAAC,IAAD,CACEiB,KAAK,IACLC,QAAS,cAAC,IAAD,CAAUC,SAAO,EAACb,GAAG,sBCxC7Bc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.95c82a6c.chunk.js","sourcesContent":["import React, { Suspense, useState } from 'react';\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  Navigate,\n  useLocation\n} from \"react-router-dom\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst PageApp = React.lazy(() => import('./page/app'));\nconst PageAuth = React.lazy(() => import('./page/auth'));\nconst PageError = React.lazy(() => import('./page/error'));\n\n\n//Check Authentication \nconst AuthRoute = ({ children, authUser }: { children: JSX.Element, authUser: boolean }) => {\n  let location = useLocation();\n  if (!authUser) {\n    return <Navigate to=\"/auth\" state={{ from: location }} />;\n  }\n  return children;\n}\n\nfunction App() {\n  const loginDetails = localStorage.getItem('auth') == \"true\" ? true : false\n  const [user] = useState(loginDetails || false)\n  return (\n    <>\n      <ToastContainer />\n      <Suspense fallback={<div className=\"loading\" />}>\n        <BrowserRouter>\n          <Routes>\n            <Route path=\"app/*\" element={\n              <AuthRoute authUser={user}>\n                <PageApp />\n              </AuthRoute>\n            }>\n            </Route>\n            <Route\n              path=\"auth/*\"\n              element={<PageAuth />}\n            />\n            <Route\n              path=\"/:pageName\"\n              element={<Navigate replace to=\"/error\" />}\n            />\n            <Route\n              path=\"/error\"\n              element={<PageError />}\n            />\n            <Route\n              path=\"/\"\n              element={<Navigate replace to=\"/app\" />}\n            />\n          </Routes>\n        </BrowserRouter>\n      </Suspense>\n    </>\n  );\n}\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}